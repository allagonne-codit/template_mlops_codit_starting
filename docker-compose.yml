services:
  # MLflow service
  mlflow:
    image: mlflow-server
    build:
      context: .
      dockerfile: docker/mlflow/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
      - ./models:/models
    environment:
      - BACKEND_STORE_URI=sqlite:///mlflow.db
      - ARTIFACT_ROOT=/mlruns

  # FastAPI service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
    depends_on:
      - mlflow

  # Airflow initialization
  airflow-init:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    user: root
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /opt/airflow/db &&
        chown -R airflow:root /opt/airflow/db &&
        gosu airflow airflow db migrate &&
        gosu airflow airflow users create \
          --username admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com \
          --password admin
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/db/airflow.db
    volumes:
      - airflow_db:/opt/airflow/db

  # Airflow webserver
  airflow-webserver:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    command: webserver
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/db/airflow.db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__SECRET_KEY=your_secret_key
      - PYTHONPATH=/opt/airflow/dags:/app
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./src:/app/src
      - ./data:/app/data
      - ./models:/app/models
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  # Airflow scheduler
  airflow-scheduler:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    command: scheduler
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/db/airflow.db
      - PYTHONPATH=/opt/airflow/dags:/app
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - airflow_db:/opt/airflow/db
      - .:/app
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  airflow_db:
    driver: local